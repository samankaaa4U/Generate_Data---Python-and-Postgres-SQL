-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    firstname character varying(30),
    lastname character varying(30),
    contactno character varying(20),
    birthdate date,
    address_country character varying(40),
    address_province character varying(40),
    address_city character varying(40),
    address_street_1 character varying(40),
    address_street_2 character varying(40),
    email character varying(50) NOT NULL,
    username character varying(50),
    password character varying(256),
    date_created timestamp with time zone DEFAULT NOW(),
    date_updated timestamp with time zone DEFAULT NOW(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.vendors
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    name character varying(100),
    description text,
    date_created timestamp with time zone DEFAULT now(),
    date_updated timestamp with time zone DEFAULT now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.vendor_users
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid,
    vendor_id uuid,
    date_created timestamp with time zone DEFAULT now(),
    date_update timestamp with time zone DEFAULT now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    name character varying(150),
    short_desc character varying(255),
    description text,
    vendor_id uuid,
    price numeric,
    sale real,
    stocks integer,
    date_updated timestamp with time zone DEFAULT NOW(),
    date_created timestamp with time zone DEFAULT NOW(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.admin
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    users_id uuid,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_carts
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cart_info
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_id uuid,
    quantity smallint,
    user_id uuid,
    date_created timestamp with time zone DEFAULT NOW(),
    date_updated time with time zone DEFAULT NOW(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.delivery
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid,
    date_created timestamp with time zone DEFAULT NOW(),
    date_updated timestamp with time zone DEFAULT NOW(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.delivery_items
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_id uuid,
    user_id uuid,
    quantity smallint,
    price money,
    status_id smallint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.status
(
    id smallserial NOT NULL,
    description character varying(50),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ratings
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid,
    product_id uuid,
    description text,
    rating smallint,
    date_created timestamp with time zone DEFAULT NOW(),
    date_updated timestamp with time zone DEFAULT NOW(),
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.vendor_users
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.vendor_users
    ADD CONSTRAINT vendor_id FOREIGN KEY (vendor_id)
    REFERENCES public.vendors (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT vendor_id FOREIGN KEY (vendor_id)
    REFERENCES public.vendors (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.admin
    ADD CONSTRAINT users_id FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.user_carts
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_info
    ADD CONSTRAINT product_id FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_info
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.delivery
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.delivery_items
    ADD CONSTRAINT product_id FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.delivery_items
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.delivery_items
    ADD CONSTRAINT status_id FOREIGN KEY (status_id)
    REFERENCES public.status (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET DEFAULT
    NOT VALID;


ALTER TABLE IF EXISTS public.ratings
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.ratings
    ADD CONSTRAINT product_id FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

END;
